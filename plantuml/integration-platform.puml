!$use_producer_adapter = "<<USE_PRODUCER_ADAPTER>>"
!$use_producer_api = "<<USE_PRODUCER_API>>"
!$use_consumer_adapter = "<<USE_CONSUMER_ADAPTER>>"
!$use_consumer_api = "<<USE_CONSUMER_API>>"
!$use_producer_adapter_channel = "<<USE_PRODUCER_ADAPTER_CHANNEL>>"
!$producer_adapter_channel_type = "<<PRODUCER_ADAPTER_CHANNEL_TYPE>>"

package "Integration Platform" {
   !if ($use_producer_adapter == "true")
      package "Producer Adapter" {
         !$producer_adapter_output_msg_type = "Message"
         !$producer_adapter_output_msg_contract = "Canonical"
         Message(producer_adapter_output_msg, "\n$producer_adapter_output_msg_type\n($producer_adapter_output_msg_contract)")
         !if ($use_producer_adapter_channel == "true")
            !if ($producer_adapter_channel_type == "webhook-callback")
               ServiceActivator(producer_adapter_channel, "Webhook (Callback)")
            !else
               MsgChannel(producer_adapter_channel, "Producer Adapter Channel")
            !endif

            !if ($is_producer_conformist  == "true")
               !if ($use_producer_channel == "true")
                  producer_channel -down-> producer_adapter_channel
                  producer_adapter_channel -down-> producer_adapter_output_msg
               !else
                  producer_output_msg -down-> producer_adapter_channel
                  producer_adapter_channel -down-> producer_adapter_output_msg
               !endif
            !else
               Message(producer_adapter_input_msg, "\n$producer_output_msg_type\n($producer_output_msg_contract)")
               MessageTranslator(producer_adapter_translator,"Translate")
               !if ($use_producer_channel == "true")
                  producer_channel -down-> producer_adapter_channel
                  producer_adapter_channel -down-> producer_adapter_input_msg
               !else
                  producer_output_msg -down-> producer_adapter_channel
                  producer_adapter_channel -down-> producer_adapter_input_msg
               !endif
               producer_adapter_input_msg -down-> producer_adapter_translator
               producer_adapter_translator -down-> producer_adapter_output_msg
            !endif
         !else
            !if ($is_producer_conformist  == "true")
               !if ($use_producer_channel == "true")
                  !if ($producer_output_msg_type == $producer_adapter_output_msg_type)
                     producer_channel -down-> producer_adapter_output_msg
                  !else
                     Message(producer_adapter_input_msg, "\n$producer_output_msg_type\n($producer_adapter_output_msg_contract)")
                     producer_channel -down-> producer_adapter_input_msg
                     producer_adapter_input_msg -down-> producer_adapter_output_msg
                  !endif
               !else
                  !if ($producer_output_msg_type == $producer_adapter_output_msg_type)
                     producer_output_msg -down-> producer_adapter_output_msg
                  !else
                     Message(producer_adapter_input_msg, "\n$producer_output_msg_type\n($producer_adapter_output_msg_contract)")
                     producer_output_msg -down-> producer_adapter_input_msg
                     producer_adapter_input_msg -down-> producer_adapter_output_msg
                  !endif
               !endif
            !else
               Message(producer_adapter_input_msg, "\n$producer_output_msg_type\n($producer_output_msg_contract)")
               MessageTranslator(producer_adapter_translator,"Translate")
               !if ($use_producer_channel == "true")
                  producer_channel -down-> producer_adapter_input_msg
               !else
                  producer_output_msg -down-> producer_adapter_input_msg
               !endif
               producer_adapter_input_msg -down-> producer_adapter_translator
               producer_adapter_translator -down-> producer_adapter_output_msg
            !endif
         !endif
      }
   !endif

   !if ($use_producer_api == "true")
      package "Producer API" {
         !$producer_api_output_msg_type = "Message"
         !$producer_api_output_msg_contract = "Canonical"
         Message(producer_api_output_msg, "\n$producer_api_output_msg_type\n(producer_api_output_msg_contract)")

         !if ($use_producer_adapter == "true")
            producer_adapter_output_msg -down-> producer_api_output_msg
         !else
            producer_output_msg -down-> producer_api_output_msg
         !endif
      }
   !endif

   package "Mediation Layer" {
      !$mediation_layer_output_msg_type = "Message"
      !$mediation_layer_output_msg_contract = "Canonical"
      PubSubChannel(mediation_layer_channel, "Pub/Sub Channel")
      Message(mediation_layer_output_msg, "\n$mediation_layer_output_msg_type\n($mediation_layer_output_msg_contract)")
      !if ($use_producer_api == "true")
         producer_api_output_msg -down-> mediation_layer_channel
      !elseif ($use_producer_adapter == "true")
         producer_adapter_output_msg -down-> mediation_layer_channel
      !endif
      mediation_layer_channel -down-> mediation_layer_output_msg
   }

   !if ($use_consumer_api == "true")
      package "Consumer API" {
         ServiceActivator(consumer_api_webhook_subscribe_channel, "Webhook (Subscribe)")
         TransactionalConsumer(intermediary_consumer, "Intermediary Consumer")
         consumer_api_webhook_subscribe_channel -right-> intermediary_consumer
         mediation_layer_output_msg -down-> intermediary_consumer
         intermediary_consumer -down-> consumer_channel
      }
   !endif

   !if ($use_consumer_adapter == "true")
      package "Consumer Adapter" {
         !$consumer_adapter_input_msg_type = "Message"
         !$consumer_adapter_input_msg_contract = "Canonical"
         Message(consumer_adapter_output_msg, "\n$consumer_input_msg_type\n($consumer_input_msg_contract)")

         !if ($is_consumer_conformist  == "true")
            !if ($consumer_adapter_input_msg_type == $consumer_input_msg_type)
               mediation_layer_output_msg -down-> consumer_adapter_output_msg
            !else
               Message(consumer_adapter_input_msg, "\n$consumer_adapter_input_msg_type\n($consumer_adapter_input_msg_contract)")
               mediation_layer_output_msg -down-> consumer_adapter_input_msg
               consumer_adapter_input_msg -down-> consumer_adapter_output_msg
            !endif
         !else
            Message(consumer_adapter_input_msg, "\n$consumer_adapter_input_msg_type\n($consumer_adapter_input_msg_contract)")
            MessageTranslator(consumer_adapter_translator,"Translate")
            mediation_layer_output_msg  -down-> consumer_adapter_input_msg
            consumer_adapter_input_msg -down-> consumer_adapter_translator
            consumer_adapter_translator -down-> consumer_adapter_output_msg
         !endif

         !if ($use_consumer_channel == "true")
            consumer_adapter_output_msg -down-> consumer_channel
         !else
            consumer_adapter_output_msg -down-> consumer_input_msg
         !endif
      }
   !endif

}